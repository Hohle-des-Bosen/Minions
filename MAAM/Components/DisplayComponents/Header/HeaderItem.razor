@inject NotificationService Notify;

<div class="item">

    <div class="@("header " + (EnableInteraction ? "clickable" : ""))" @onclick="@Add" title="@HeaderTitle"> @Header </div>
    <div class="content-con">
        <span title="@ContentTitle">
            @Content
        </span>
        @if (SmallContent != null)
        {
            <span class="smallcon" title="@SmallContentTitle">@SmallContent</span>
        }
    </div>

    <div class="footer-el left" title="@ContentLeftTitle">@ContentLeft</div>
    <div class="footer-el right" title="@ContentRightTitle">@ContentRight</div>

</div>

@code {
    [Parameter]
    public string Content { get; set; }
    [Parameter]
    public string ContentTitle { get; set; }

    [Parameter]
    public string Header { get; set; }
    [Parameter]
    public string HeaderTitle { get; set; }

    [Parameter]
    public string SmallContent { get; set; }
    [Parameter]
    public string SmallContentTitle { get; set; }

    [Parameter]
    public string ContentLeft { get; set; }
    [Parameter]
    public string ContentLeftTitle { get; set; }

    [Parameter]
    public string ContentRight { get; set; }
    [Parameter]
    public string ContentRightTitle { get; set; }

    [Parameter]
    public bool EnableInteraction { get; set; } = false;


    [Parameter]
    public EventCallback<int> AddContent { get; set; }


    public async Task Add()
    {
        if (!EnableInteraction)
        {
            return;
        }

        var result = await Notify.Prompt("Count");
        if (!int.TryParse(result, out var number))
        {
            return;
        }

        await AddContent.InvokeAsync(number);


    }

}