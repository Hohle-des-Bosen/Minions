
  @inject IRepository<Race> RaceRepo



<MudDialog>








    <DialogContent>

        <MudTextField @bind-Value="Element.Name" T="string" Label="Name" Variant="Variant.Outlined"></MudTextField>
        <MudTextField @bind-Value="Element.Surname" T="string" Label="Sure Name" Variant="Variant.Outlined"></MudTextField>



        <MudSelect @bind-Value="Element.Race" T="string" Label="Race" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">

            @foreach (Race item in RaceOptions)
            {
                <MudSelectItem Value="@item.Name">@item.Name</MudSelectItem>
            }
        </MudSelect>

        <MudTextField @bind-Value="Element.Job" T="string" Label="Job" Variant="Variant.Outlined"></MudTextField>
        <MudGrid>
            <MudItem xs="6">
                <MudNumericField @bind-Value="Element.Age" T="int" HideSpinButtons="true" Label="Age" Variant="Variant.Outlined"></MudNumericField>
            </MudItem>
            <MudItem xs="6">
                <MudSelect @bind-Value="Element.Sex" T="Sex" Label="Sex" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">

                    @foreach (Sex item in Enum.GetValues(typeof(Sex)))
                    {
                        <MudSelectItem Value="@item">@item</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
        </MudGrid>

        <MudGrid>
            <MudItem xs="6">
                <MudNumericField @bind-Value="Element.Payment" T="double" HideSpinButtons="true" Label="Payment" Variant="Variant.Outlined"></MudNumericField>
            </MudItem>
            <MudItem xs="6">
                <MudNumericField @bind-Value="Element.DayWithoutPay" T="int" HideSpinButtons="true" Label="Days without pay" Variant="Variant.Outlined"></MudNumericField>
            </MudItem>
        </MudGrid>





    </DialogContent>

    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>



</MudDialog>















@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public Worker Element { get; set; }
    public List<Race> RaceOptions { get; set; } = new List<Race>();


    void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();

    protected override async Task OnInitializedAsync()
    {
        RaceOptions = (await RaceRepo.GetAll()).OrderBy(x => x.Name).ToList();

        await base.OnInitializedAsync();
    }

}
