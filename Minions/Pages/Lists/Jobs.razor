@page "/Job"

<h3>Jobs</h3>






@* <MudButtonGroup Color="Color.Primary" Variant="Variant.Filled">
    <MudButton OnClick="@AddChar">Add new Crew</MudButton>
    <MudButton>Two</MudButton>
    <MudButton>Three</MudButton>
</MudButtonGroup>

<MudDataGrid T="Job" Items="Liste" SortMode="SortMode.Single" Class="border-solid border-2 mud-border">
    <Columns>
        <PropertyColumn Title="Name" Property="x => x.Name"></PropertyColumn>
        <PropertyColumn Title="Age" Property="x => x.Age"></PropertyColumn>
        <PropertyColumn Title="Race" Property="x => x.Race"></PropertyColumn>
        <PropertyColumn Title="Sex" Property="x => x.Sex"></PropertyColumn>
        <PropertyColumn Title="Job" Property="x => x.Job"></PropertyColumn>
        <PropertyColumn Title="Payment(/Day)" Property="x => x.Payment"></PropertyColumn>
        <PropertyColumn Title="Days without pay" Property="x => x.DayWihtoutPay"></PropertyColumn>
        <PropertyColumn Title="Current Payment" Property="x => x.CurrentPayment"></PropertyColumn>

        <TemplateColumn CellClass="d-flex justify-end">
            <CellTemplate Context="cellContext">
                <MudStack Row>
                   
                    <MudButton OnClick="@(()=>Remove(cellContext.Item))" Size="@Size.Small" Variant="@Variant.Filled" Color="@Color.Error">Remove</MudButton>
                 @*    <MudIconButton OnClick="@(()=>CharacterSheet(cellContext.Item))" Icon="@Icons.Material.Filled.Build" Size="Size.Small" aria-label="delete"></MudIconButton>  * @    
                </MudStack>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>
 *@




@code {
    public List<Job>? Liste { get; set; }



    public void Remove(Job remove)
    {
        Liste.Remove(remove);
        // repo.Delete(remufe.Id);

    }


}
