


<MudDialog>
    <TitleContent>
        <MudTHeadRow Class="d-flex">
            <MudText Typo="Typo.h6">New Camp</MudText>
        </MudTHeadRow>


    </TitleContent>

    <DialogContent>


        @if (Camp != null)
        {

            <MudGrid>

                <MudItem xs="6">
                    <MudGrid>
                        <MudItem xs="12">
                            <MudTextField @bind-Value="Camp.Name" Variant="Variant.Outlined" Label="Name">test</MudTextField>
                        </MudItem>

                        <MudItem xs="12">
                            <MudDatePicker Label="DateTime" Editable="true" @bind-Date="Camp.DateTime" Variant="Variant.Outlined" Placeholder="Select Date" />

                        </MudItem>

                        <MudItem xs="12">
                            <MudTextField @bind-Value="Camp.GM" Variant="Variant.Outlined" Label="GM">test</MudTextField>
                        </MudItem>
                        <MudItem xs="12">
                            <MudNumericField @bind-Value="Camp.PlayerCount"
                                             Label="Name"
                                             Variant="Variant.Outlined"
                                             Adornment="Adornment.End"
                                             AdornmentIcon="@Icons.Material.Filled.Add"
                                             OnAdornmentClick="AddPlayerName"></MudNumericField>

                        </MudItem>
                    </MudGrid>
                   
                </MudItem>

                <MudItem xs="6">
                    <MudTextField @bind-Value="Camp.Description" Variant="Variant.Outlined" Label="Description" Lines="14">test</MudTextField>

                </MudItem>

            </MudGrid>

@*             <MudList>
                @if (Player != null)
                {
                    @for (var i = 0; i < Player.Count; i++)
                    {
                        var item = Player[i];
                        <MudTextField @bind-Value="item.Name" @bind-Value:after="update" T="string" Label="@(i + " Player")" Variant="Variant.Outlined"></MudTextField>
                    }
                }

            </MudList> *@


        }

    </DialogContent>

    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Error" OnClick="Create">Add</MudButton>
    </DialogActions>
</MudDialog>




@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public Campaign Camp { get; set; }
    public List<Player> Player { get; set; } = new List<Player>();






    private void Cancel()
    {
        MudDialog.Cancel();
    }
    public void Create()
    {



        MudDialog.Close(DialogResult.Ok(Camp));
    }

    public void AddPlayerName()
    {

        Camp.PlayerCount++;
        Player.Add(new Player());
    }

    public void update()
    {
        Camp.PlayerNames.Clear();


        for (var i = 0; i < Player.Count; i++)
        {
            Camp.PlayerNames.Add(Player[i].Name);
        }



    }


}




   @*

   Beüllen Cam.Playernames
 *@
