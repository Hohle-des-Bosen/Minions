@using Minions.Data;
@inject IRepository<Job> RepoJob


@*

Sachen die ich will


Wie lange Die Person auf dem Schiff ist

 Beförderungs System (Rang 1 - 5) Möglichkeit mit sternchen

 Lon anpasungen

 Job wegsel

 Wan hat er das schiff betreten (datum)
 Wie lange ist er auf dem schiff (tage)

 Wan ist er gegannegen (datum,Grund)









*@
















<MudDialog>
    <TitleContent>

        <MudTHeadRow Class="d-flex">

            <MudTextField Typo="Typo.h6"
            @bind-Value="Element.Name"
                          Align="Align.Left"
                          Label="Name"
                          Variant="Variant.Outlined">@Element.Name</MudTextField>

            <MudTextField Typo="Typo.h6"
            @bind-Value="Element.Surname"
                          Align=" Align.Left"
                          Label="Surname"
                          Variant="Variant.Outlined">@Element.Surname</MudTextField>


            <MudSpacer></MudSpacer>

            
            <MudSelect @bind-Value="Element.Sex" T="Sex" Label="Sex" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">

                @foreach (Sex item in Enum.GetValues(typeof(Sex)))
                {
                    <MudSelectItem Value="@item">@item</MudSelectItem>
                }
            </MudSelect>

            <MudSpacer></MudSpacer>

            <MudTextField @bind-Value="Element.Age"
                          Typo="Typo.h6"
                          Label="Age"
                          Variant="Variant.Outlined"
                          Align="Align.Right">Age @Element.Age</MudTextField>
            

        </MudTHeadRow>


    </TitleContent>

    <DialogContent>
        @if (Element != null)
        {
            <br />
            <br />


            <MudGrid>

                <MudItem xs="4">
                    <MudSelect @bind-Value="Element.Job" T="Job" Label="Job" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">

                        @foreach (Job item in Jobs)
                        {
                            <MudSelectItem Value="@item">@item.Name</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>

                <MudItem xs="4">
                    <MudTextField T="string" Label="Rang" Variant="Variant.Outlined"></MudTextField>
                </MudItem>

                <MudItem>
                    <MudRating SelectedValue="1" />
                </MudItem>

            </MudGrid>

            <br />

            <MudGrid>
                <MudItem>
                    <MudNumericField @bind-Value="Element.Payment" Label="Payment(/Day)" Min="0" Variant="Variant.Outlined" HideSpinButtons="true" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Savings"></MudNumericField>

                </MudItem>


                <MudItem>
                    <MudNumericField @bind-Value="Element.DayWihtoutPay" Label="Days without pay" Min="0" Variant="Variant.Outlined" HideSpinButtons="true"></MudNumericField>

                </MudItem>

                <MudItem>
                    <MudNumericField Value="Element.CurrentPayment" ReadOnly="true" Label="Current Payment" Min="0" Variant="Variant.Outlined" HideSpinButtons="true"></MudNumericField>

                </MudItem>

            </MudGrid>

            <br />

            <MudGrid>


                <MudItem xs="4">
                    <MudTextField T="string" Label="Service started on board" Variant="Variant.Outlined"></MudTextField>
                </MudItem>

                <MudItem xs="2">
                    <MudNumericField Value="Element.TimeOnBord"
                                     Adornment="Adornment.End"
                                     AdornmentText="Days"
                                     Label="Time on bord"
                                     Min="0"
                                     Variant="Variant.Outlined"
                                     HideSpinButtons="true">
                    </MudNumericField>
                </MudItem>

                <MudItem xs="4">
                    <MudTextField T="string"
                                  Label="Service end on board"
                                  Variant="Variant.Outlined">
                    </MudTextField>
                </MudItem>
            </MudGrid>







            <br />
            <br />
            <br />
            <MudGrid>

                <MudItem xs="4">
                    <MudCard Outlined="true">
                        <MudCardHeader>Inventar</MudCardHeader>
                        <MudTextField T="string" Variant="Variant.Text" Lines="20"></MudTextField>
                    </MudCard>


                </MudItem>

                <MudItem xs="4">
                    <MudCard Outlined="true">
                        <MudCardHeader>Skills</MudCardHeader>
                        <MudTextField T="string" Variant="Variant.Text" Lines="20"></MudTextField>
                    </MudCard>


                </MudItem>
                <MudItem xs="4">
                    <MudCard Outlined="true">
                        <MudCardHeader>Notes</MudCardHeader>
                        <MudTextField T="string" Variant="Variant.Text" Lines="20"></MudTextField>
                    </MudCard>


                </MudItem>



            </MudGrid>

            <br />
        }
    </DialogContent>

</MudDialog>













@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public Worker Element { get; set; }
    public List<Job> Jobs { get; set; } = new List<Job>();



    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Jobs = (await RepoJob.GetAll()).ToList();
    }


}
